// <auto-generated />
using System;
using Agrogar.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agrogar.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231204155020_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Agrogar.Shared.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LicensePP")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkedHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkId");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("Agrogar.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Campo de cultivo",
                            Url = "images/fields.png"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Huerto Frutal",
                            Url = "images/treefield.png"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Invernadero",
                            Url = "images/greenhouse.png"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Almacen",
                            Url = "images/warehouse.png"
                        });
                });

            modelBuilder.Entity("Agrogar.Shared.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Conductor de Tractor"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Peón"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Operario"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Conductor de Camión"
                        });
                });

            modelBuilder.Entity("Agrogar.Shared.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CadasterReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Crop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkPhaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkPhaseId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CadasterReference = "33054A026001080000RI",
                            CategoryId = 1,
                            Crop = "Trigo",
                            Municipality = "Las Regueras",
                            Province = "Asturias",
                            Size = 3,
                            UserId = 1,
                            WorkPhaseId = 2
                        },
                        new
                        {
                            Id = 2,
                            CadasterReference = "52014A011002030000KJ",
                            CategoryId = 1,
                            Crop = "Maiz",
                            Municipality = "Carreño",
                            Province = "Asturias",
                            Size = 3,
                            UserId = 1,
                            WorkPhaseId = 7
                        },
                        new
                        {
                            Id = 3,
                            CadasterReference = "52014A011001880000KP",
                            CategoryId = 3,
                            Crop = "Fresa",
                            Municipality = "Carreño",
                            Province = "Asturias",
                            Size = 3,
                            UserId = 2,
                            WorkPhaseId = 3
                        },
                        new
                        {
                            Id = 4,
                            CadasterReference = "52076A101004200000LL",
                            CategoryId = 4,
                            Crop = "Nave industrial",
                            Municipality = "Villaviciosa",
                            Province = "Asturias",
                            Size = 3,
                            UserId = 2,
                            WorkPhaseId = 5
                        });
                });

            modelBuilder.Entity("Agrogar.Shared.TaskType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkPhaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkPhaseId");

                    b.ToTable("TaskType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Arar",
                            WorkPhaseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nivelar",
                            WorkPhaseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Abonar",
                            WorkPhaseId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sembrar",
                            WorkPhaseId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Inundación",
                            WorkPhaseId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gravedad",
                            WorkPhaseId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Aspersión",
                            WorkPhaseId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Goteo",
                            WorkPhaseId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Hidropónico",
                            WorkPhaseId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fumigar",
                            WorkPhaseId = 4
                        },
                        new
                        {
                            Id = 11,
                            Name = "Escardar",
                            WorkPhaseId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Quemar",
                            WorkPhaseId = 4
                        },
                        new
                        {
                            Id = 13,
                            Name = "Poda",
                            WorkPhaseId = 5
                        },
                        new
                        {
                            Id = 14,
                            Name = "Reparación",
                            WorkPhaseId = 5
                        },
                        new
                        {
                            Id = 15,
                            Name = "Limpieza",
                            WorkPhaseId = 5
                        },
                        new
                        {
                            Id = 16,
                            Name = "Fertilizar",
                            WorkPhaseId = 6
                        },
                        new
                        {
                            Id = 17,
                            Name = "Recogida",
                            WorkPhaseId = 7
                        },
                        new
                        {
                            Id = 18,
                            Name = "Transporte",
                            WorkPhaseId = 7
                        });
                });

            modelBuilder.Entity("Agrogar.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LicensePP")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 12, 4, 16, 50, 20, 844, DateTimeKind.Local).AddTicks(1343),
                            Email = "Test@Te.st",
                            LicensePP = true,
                            Name = "Test",
                            PasswordHash = new byte[] { 177, 209, 203, 25, 48, 151, 158, 74, 121, 40, 4, 77, 111, 116, 75, 101, 113, 67, 152, 87, 107, 226, 17, 165, 171, 221, 141, 63, 31, 222, 142, 200, 88, 188, 215, 138, 94, 161, 30, 179, 51, 107, 119, 92, 195, 178, 134, 180, 227, 175, 52, 67, 17, 56, 165, 26, 203, 79, 64, 169, 8, 48, 248, 105 },
                            PasswordSalt = new byte[] { 118, 141, 4, 5, 113, 42, 233, 249, 150, 72, 23, 73, 244, 228, 243, 129, 121, 47, 240, 177, 171, 156, 152, 128, 143, 232, 221, 93, 87, 32, 193, 221, 48, 1, 26, 108, 145, 157, 83, 94, 106, 135, 34, 185, 165, 210, 150, 21, 60, 209, 12, 105, 157, 149, 190, 1, 58, 219, 224, 43, 182, 94, 70, 227, 77, 185, 199, 146, 110, 147, 194, 15, 99, 136, 209, 95, 195, 96, 17, 221, 65, 71, 64, 0, 109, 196, 29, 228, 73, 18, 149, 68, 248, 248, 163, 181, 89, 29, 132, 104, 9, 95, 29, 222, 25, 23, 249, 56, 86, 206, 56, 254, 214, 87, 114, 57, 27, 59, 202, 37, 77, 146, 18, 185, 86, 77, 43, 207 },
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 12, 4, 16, 50, 20, 844, DateTimeKind.Local).AddTicks(1349),
                            Email = "Test2@Te.st",
                            LicensePP = true,
                            Name = "Test2",
                            PasswordHash = new byte[] { 177, 209, 203, 25, 48, 151, 158, 74, 121, 40, 4, 77, 111, 116, 75, 101, 113, 67, 152, 87, 107, 226, 17, 165, 171, 221, 141, 63, 31, 222, 142, 200, 88, 188, 215, 138, 94, 161, 30, 179, 51, 107, 119, 92, 195, 178, 134, 180, 227, 175, 52, 67, 17, 56, 165, 26, 203, 79, 64, 169, 8, 48, 248, 105 },
                            PasswordSalt = new byte[] { 118, 141, 4, 5, 113, 42, 233, 249, 150, 72, 23, 73, 244, 228, 243, 129, 121, 47, 240, 177, 171, 156, 152, 128, 143, 232, 221, 93, 87, 32, 193, 221, 48, 1, 26, 108, 145, 157, 83, 94, 106, 135, 34, 185, 165, 210, 150, 21, 60, 209, 12, 105, 157, 149, 190, 1, 58, 219, 224, 43, 182, 94, 70, 227, 77, 185, 199, 146, 110, 147, 194, 15, 99, 136, 209, 95, 195, 96, 17, 221, 65, 71, 64, 0, 109, 196, 29, 228, 73, 18, 149, 68, 248, 248, 163, 181, 89, 29, 132, 104, 9, 95, 29, 222, 25, 23, 249, 56, 86, 206, 56, 254, 214, 87, 114, 57, 27, 59, 202, 37, 77, 146, 18, 185, 86, 77, 43, 207 },
                            PhoneNumber = "1234567890"
                        });
                });

            modelBuilder.Entity("Agrogar.Shared.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("TaskTypeId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Agrogar.Shared.WorkPhase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkPhase");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Preparación del suelo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Siembra"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Riego"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Control de Biodiversidad"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mantenimiento"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fertilización"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cosecha"
                        });
                });

            modelBuilder.Entity("Agrogar.Shared.Assignment", b =>
                {
                    b.HasOne("Agrogar.Shared.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Agrogar.Shared.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Agrogar.Shared.Property", b =>
                {
                    b.HasOne("Agrogar.Shared.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrogar.Shared.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrogar.Shared.WorkPhase", "WorkPhase")
                        .WithMany()
                        .HasForeignKey("WorkPhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");

                    b.Navigation("WorkPhase");
                });

            modelBuilder.Entity("Agrogar.Shared.TaskType", b =>
                {
                    b.HasOne("Agrogar.Shared.WorkPhase", "WorkPhase")
                        .WithMany()
                        .HasForeignKey("WorkPhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPhase");
                });

            modelBuilder.Entity("Agrogar.Shared.Work", b =>
                {
                    b.HasOne("Agrogar.Shared.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agrogar.Shared.TaskType", "TaskType")
                        .WithMany()
                        .HasForeignKey("TaskTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");

                    b.Navigation("TaskType");
                });
#pragma warning restore 612, 618
        }
    }
}
